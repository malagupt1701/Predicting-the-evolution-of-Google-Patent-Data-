# -*- coding: utf-8 -*-
"""LDA_implementation_latest-all-years.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_-lR9rZFNIgUgIcmA7e5A9bDrlYxm13H
"""

import pandas as pd

!pip install pyLDAvis

!pip install pyLDAvis.gensim

from google.colab import drive
drive.mount('/content/drive/')

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/My Drive

import warnings
warnings.filterwarnings("ignore" , category=DeprecationWarning)

import pandas as pd
import ast
import pickle

word_mat = pd.read_pickle('allyears_all_new.pkl')
word_mat = word_mat.T.reset_index().T
word_mat.drop('level_0',inplace=True)

word_mat = word_mat.T

word_mat = word_mat.drop(columns = [ 'third', 'say', 'wherein', 'less' , 'c' , 'b' , 'fourth' , 'array',
                          'accord', 'device', 'method', 'comprise','comprising', 'compare' ,  'whether' , 'without' ,'within',
                          'comprises', 'include', 'portion','determine', 'ratio' , 'two' , 'point' , 'period',
                          'select','position','set','use','end' , 'id'  , 'data' ,  '0', '01', '05', '1', '10', '100', '12', '15', '2', '20',
                           '200', '25', '3', '30', '4', '40', '5', '50', '500', '6' ,  '60', '70', '8', '80', '90','group' , 'cancel' , 'acceptable'])

from pprint import pprint
import gensim
import gensim.corpora as corpora

id2word = corpora.Dictionary([list(word_mat.columns)])

cols = []
for k, v in id2word.iteritems():
    cols.append(v)

word_mat = word_mat[cols]

pickle_in = open("outer_list.pkl","rb")
outer_list_pkl = pickle.load(pickle_in)

from gensim import corpora, models
import pyLDAvis
import pyLDAvis.gensim_models
import pickle 
import pyLDAvis
import os

year = 2018
df_lengths = [1,150456,307779,469536,628516,751018]
print('=================================================================')

for j in range(5):
  print('We are processing for the year ',int(year+j),'...')

  outer_list_year = outer_list_pkl[df_lengths[j]-1:df_lengths[j+1]]
  tfidf = models.TfidfModel(outer_list_year)
  corpus_tfidf = tfidf[outer_list_year]
  
  num_topics = 10
  lda_model = gensim.models.LdaMulticore(corpus_tfidf, num_topics=10, passes=2, workers=2  , id2word = id2word)
  topics_list = []
  for idx, topic in lda_model.print_topics(-1):
    print('Topic: {} \nWords: {}'.format(idx, topic))
    topics_list.append('Topic: {} \nWords: {}'.format(idx, topic))
  
  lda_model_filepath = 'lda_model' + str(year+j)
  with open(lda_model_filepath, 'wb') as f:
    pickle.dump(topics_list, f)
  

  pyLDAvis.enable_notebook()
  LDAvis_data_filepath = 'ldavis_prepared_20' + str(year+j)

  LDAvis_prepared = pyLDAvis.gensim_models.prepare(lda_model, outer_list_year, id2word)
  with open(LDAvis_data_filepath, 'wb') as f:
      pickle.dump(LDAvis_prepared, f)

  with open(LDAvis_data_filepath, 'rb') as f:
      LDAvis_prepared = pickle.load(f)
  pyLDAvis.save_html(LDAvis_prepared, 'ldavis_prepared_20' + str(year+j) + '.html')

  print('=================================================================')